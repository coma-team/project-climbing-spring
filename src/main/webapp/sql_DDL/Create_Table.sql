CREATE TABLE MEMBER (
                        MEMBER_ID VARCHAR(100) PRIMARY KEY,
                        MEMBER_NAME VARCHAR(50) NOT NULL,
                        MEMBER_PASSWORD VARCHAR(100) NOT NULL,
                        MEMBER_PHONE VARCHAR(50) NOT NULL,
                        MEMBER_REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        MEMBER_PROFILE VARCHAR(2048) DEFAULT '/default.jpg',
                        MEMBER_CURRENT_POINT INT DEFAULT 0,
                        MEMBER_TOTAL_POINT INT DEFAULT 0,
                        MEMBER_CREW_NUM INT DEFAULT 0,
                        MEMBER_CREW_JOIN_DATE DATE DEFAULT NULL,
                        MEMBER_LOCATION VARCHAR(100) NOT NULL,
                        MEMBER_ROLE CHAR(1) DEFAULT 'F'
);

CREATE TABLE GYM (
                     GYM_NUM INT PRIMARY KEY AUTO_INCREMENT,
                     GYM_NAME VARCHAR(100) NOT NULL,
                     GYM_PROFILE VARCHAR(2048) DEFAULT '/gym_img/default.jpg',
                     GYM_DESCRIPTION TEXT,
                     GYM_LOCATION VARCHAR(100) NOT NULL,
                     GYM_RESERVATION_CNT INT DEFAULT 10 NOT NULL,
                     GYM_PRICE INT DEFAULT 20000,
                     GYM_ADMIN_BATTLE_VERIFIED CHAR(1) DEFAULT 'F'
);

CREATE TABLE CREW (
                      CREW_NUM INT PRIMARY KEY AUTO_INCREMENT,
                      CREW_NAME VARCHAR(250) NOT NULL,
                      CREW_DESCRIPTION TEXT,
                      CREW_MAX_MEMBER_SIZE INT NOT NULL DEFAULT 20,
                      CREW_LEADER VARCHAR(100) NOT NULL,
                      CREW_BATTLE_STATUS CHAR(1) DEFAULT 'F',
                      CREW_PROFILE VARCHAR(2048) DEFAULT '/crew_img/default.jpg'
);

CREATE TABLE BOARD (
                       BOARD_NUM INT PRIMARY KEY AUTO_INCREMENT,
                       BOARD_TITLE VARCHAR(100) NOT NULL,
                       BOARD_CONTENT VARCHAR(1000),
                       BOARD_CNT INT DEFAULT 0,
                       BOARD_LOCATION VARCHAR(100),
                       BOARD_WRITER_ID VARCHAR(100)
);

CREATE TABLE REPLY (
                       REPLY_NUM INT PRIMARY KEY AUTO_INCREMENT,
                       REPLY_CONTENT VARCHAR(100) NOT NULL,
                       REPLY_BOARD_NUM INT,
                       REPLY_WRITER_ID VARCHAR(100)
);

CREATE TABLE GRADE (
                       GRADE_NUM INT PRIMARY KEY AUTO_INCREMENT,
                       GRADE_PROFILE VARCHAR(2048) NOT NULL,
                       GRADE_NAME VARCHAR(100) NOT NULL,
                       GRADE_MIN_POINT INT NOT NULL,
                       GRADE_MAX_POINT INT NOT NULL
);

CREATE TABLE FAVORITE (
                          FAVORITE_NUM INT PRIMARY KEY AUTO_INCREMENT,
                          FAVORITE_MEMBER_ID VARCHAR(100) NOT NULL,
                          FAVORITE_GYM_NUM INT NOT NULL
);

CREATE TABLE CREW_BOARD (
                            CREW_BOARD_NUM INT PRIMARY KEY AUTO_INCREMENT,
                            CREW_BOARD_WRITER_ID VARCHAR(100) NOT NULL,
                            CREW_BOARD_CONTENT VARCHAR(200) NOT NULL
);

CREATE TABLE BATTLE (
                        BATTLE_NUM INT PRIMARY KEY AUTO_INCREMENT,
                        BATTLE_GYM_NUM INT,
                        BATTLE_REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        BATTLE_GAME_DATE DATE DEFAULT NULL,
                        BATTLE_STATUS CHAR(1) DEFAULT 'F'
);

CREATE TABLE BATTLE_RECORD (
                               BATTLE_RECORD_NUM INT PRIMARY KEY AUTO_INCREMENT,
                               BATTLE_RECORD_BATTLE_NUM INT,
                               BATTLE_RECORD_CREW_NUM INT,
                               BATTLE_RECORD_IS_WINNER CHAR(1) DEFAULT 'F',
                               BATTLE_RECORD_MVP_ID VARCHAR(100) DEFAULT NULL
);

CREATE TABLE RESERVATION (
                             RESERVATION_NUM VARCHAR(100) PRIMARY KEY,
                             RESERVATION_DATE DATE NOT NULL,
                             RESERVATION_GYM_NUM INT NOT NULL,
                             RESERVATION_MEMBER_ID VARCHAR(100) NOT NULL,
                             RESERVATION_PRICE INT NOT NULL
);

ALTER TABLE BOARD
    ADD CONSTRAINT FK_BOARD_WRITER_ID
        FOREIGN KEY (BOARD_WRITER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE;

ALTER TABLE REPLY
    ADD CONSTRAINT FK_REPLY_BOARD_NUM
        FOREIGN KEY (REPLY_BOARD_NUM) REFERENCES BOARD(BOARD_NUM) ON DELETE CASCADE;

ALTER TABLE REPLY
    ADD CONSTRAINT FK_REPLY_WRITER_ID
        FOREIGN KEY (REPLY_WRITER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE;

ALTER TABLE FAVORITE
    ADD CONSTRAINT FK_FAVORITE_MEMBER_ID
        FOREIGN KEY (FAVORITE_MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE;

ALTER TABLE FAVORITE
    ADD CONSTRAINT FK_FAVORITE_GYM_NUM
        FOREIGN KEY (FAVORITE_GYM_NUM) REFERENCES GYM(GYM_NUM) ON DELETE CASCADE;

ALTER TABLE CREW_BOARD
    ADD CONSTRAINT FK_CREW_BOARD_WRITER_ID
        FOREIGN KEY (CREW_BOARD_WRITER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE;

ALTER TABLE BATTLE_RECORD
    ADD CONSTRAINT FK_BATTLE_RECORD_BATTLE_NUM
        FOREIGN KEY (BATTLE_RECORD_BATTLE_NUM) REFERENCES BATTLE(BATTLE_NUM);

ALTER TABLE BATTLE_RECORD
    ADD CONSTRAINT FK_BATTLE_RECORD_CREW_NUM
        FOREIGN KEY (BATTLE_RECORD_CREW_NUM) REFERENCES CREW(CREW_NUM);

ALTER TABLE RESERVATION
    ADD CONSTRAINT FK_RESERVATION_GYM_NUM
        FOREIGN KEY (RESERVATION_GYM_NUM) REFERENCES GYM(GYM_NUM) ON DELETE CASCADE;

ALTER TABLE RESERVATION
    ADD CONSTRAINT FK_RESERVATION_MEMBER_ID
        FOREIGN KEY (RESERVATION_MEMBER_ID) REFERENCES MEMBER(MEMBER_ID) ON DELETE CASCADE;

ALTER TABLE BATTLE
    ADD CONSTRAINT UNIQUE_GYM_NUM UNIQUE (BATTLE_GYM_NUM);

ALTER TABLE MEMBER
    ADD CONSTRAINT FK_MEMBER_CREW_NUM
        FOREIGN KEY (MEMBER_CREW_NUM) REFERENCES CREW(CREW_NUM) ON DELETE SET DEFAULT;



